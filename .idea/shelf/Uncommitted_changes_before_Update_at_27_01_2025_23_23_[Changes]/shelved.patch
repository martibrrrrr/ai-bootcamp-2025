Index: python/giorno2_3/esercizi/classi/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class Country:\r\n    ...\r\n\r\n    @property\r\n    def pop(self):\r\n        \"\"\"The total population of this country\"\"\"\r\n\r\n\r\nclass Region:\r\n    ...\r\n\r\n\r\nclass City:\r\n    \"\"\"A city\"\"\"\r\n\r\n    def __init__(self, name, pop=None):\r\n        ...\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/giorno2_3/esercizi/classi/main.py b/python/giorno2_3/esercizi/classi/main.py
--- a/python/giorno2_3/esercizi/classi/main.py	(revision 9c34a029b0837f7614317b2546ba72814f534548)
+++ b/python/giorno2_3/esercizi/classi/main.py	(date 1738016416095)
@@ -1,17 +1,45 @@
+from python.giorno1.transcript import name1
+
+
 class Country:
-    ...
+    def __init__(self, name):
+        self.name=name
+        self.regions= []
+    def add(self,region): #method. A function defined in a class
+        if isinstance(region,Region):
+            self.regions.append(region)
+        else:
+            raise ValueError
 
-    @property
+    @property #to evaluate something
     def pop(self):
         """The total population of this country"""
+        for region in self.region:
+            region.pop += 1
+    """ def most_populous_city(self):
+        for region in self.regions:
+            for city in region.cities:
+                cities = city
+"""
 
 
 class Region:
-    ...
+    def __init__(self,name):
+        self.name = name
+        self.cities = []
+    def add(self,city):
+        if isinstance(city,City):
+            self.cities.append(city)
+        else:
+            raise ValueError
 
-
+    @property
+    def pop(self):
+        for city in self.cities:
+            city.pop += 1
 class City:
     """A city"""
 
     def __init__(self, name, pop=None):
-        ...
+        self.name=name
+        self.pop = 0
Index: python/giorno2_3/esercizi/classi/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from main import Country, Region, City\r\n\r\nitaly = Country(\"Italy\")\r\n\r\nassert italy.name == \"Italy\"\r\n\r\nsicily = Region(\"Sicily\")\r\nitaly.add(sicily)\r\n\r\nsicily.add(City(\"Catania\", pop=300_000))\r\nsicily.add(City(\"Palermo\", pop=600_000))\r\n\r\nassert sicily.pop == 900_000\r\n\r\ncalabria = Region(\"Calabria\")\r\ncalabria.add(City(\"Reggio Calabria\", pop=170_000))\r\n\r\nitaly.add(calabria)\r\nassert italy.pop == 1_170_000\r\n\r\n# La correttezza della risposta dipende ovviamente\r\n# dalla quantità e qualità di dati che abbiamo.\r\nassert italy.most_populuous_city.name == \"Palermo\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/giorno2_3/esercizi/classi/tests.py b/python/giorno2_3/esercizi/classi/tests.py
--- a/python/giorno2_3/esercizi/classi/tests.py	(revision 9c34a029b0837f7614317b2546ba72814f534548)
+++ b/python/giorno2_3/esercizi/classi/tests.py	(date 1738014635570)
@@ -1,22 +1,35 @@
 from main import Country, Region, City
 
+# Creo una nuova istanza di paese chiamato "Italy"
 italy = Country("Italy")
 
 assert italy.name == "Italy"
 
+# Creo una regione chiamata Sicilia
 sicily = Region("Sicily")
+
+# Aggiungo la Sicilia all'Italia
 italy.add(sicily)
 
+# Aggiungo alla Sicilia due città
 sicily.add(City("Catania", pop=300_000))
 sicily.add(City("Palermo", pop=600_000))
 
+# Verifico che la somma della popolazione delle due città siciliane
+# sia corretta, andando a guardare l'attributo (una proprietà) chiamata `pop`
 assert sicily.pop == 900_000
 
+# Creo un'altra regione...
 calabria = Region("Calabria")
+# ... e una città
 calabria.add(City("Reggio Calabria", pop=170_000))
 
+# Aggiungo la nuova regione all'Italia
 italy.add(calabria)
-assert italy.pop == 1_170_000
+
+# Infine, guarda un attributo (anch'esso una proprietà)
+# sul paese Italia
+assert italy.pop == 1_070_000
 
 # La correttezza della risposta dipende ovviamente
 # dalla quantità e qualità di dati che abbiamo.
Index: python/GLOSSARIO.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/GLOSSARIO.md b/python/GLOSSARIO.md
new file mode 100644
--- /dev/null	(date 1738014635569)
+++ b/python/GLOSSARIO.md	(date 1738014635569)
@@ -0,0 +1,30 @@
+ - Algoritmo: Una sequenza di passaggi per risolvere un problema o completare un compito.
+ - Argomento: in Python, un oggetto fornito a una funzione quando viene chiamata, ovvero il suo Input.
+ - Assegnare: creare un nuovo Nome nel Namespace locale collegandolo ad un oggetto tramite l'operatore `=` .
+ - API (Application Programming Interface): l'interfaccia esposta da un oggetto o una libreria.
+ - Blocco: Un gruppo di istruzioni indentate insieme per definire una specifica struttura di codice, come il corpo di un ciclo o di una funzione.
+ - Bug: Un errore o difetto nel codice che causa comportamenti non previsti o crash.
+ - Commento: Testo non eseguibile in un programma (indicato con `#`) usato per spiegare il codice.
+ - Compilatore: Un componente che, nel caso di cPython, traduce il codice sorgente in bytecode per essere interpretato.
+ - Condizionale: Un elemento sintattico come `if`, `elif` o `else` che controlla l'esecuzione del codice in base a determinate condizioni.
+ - Debugger: Uno strumento utilizzato per testare e correggere i programmi identificando e risolvendo errori.
+ - Dichiarazione: Un comando o altro elemento sintattico espresso mediante una parola chiave che non ritorna alcun risultato.
+ - Eccezione: Un errore che interrompe il normale flusso di un programma, gestibile con `try` ed `except`.
+ - Espressione: Codice che, una volta eseguito, viene valutato dall'Interprete Python e ritorna un risultato.
+ - Firma (Funzione): la sequenza di Argomenti semplici ed Argomenti chiave (se presenti) nella definizione di una funzione.
+ - Funzione: Un blocco di codice riutilizzabile che svolge un compito specifico, definito con la parola chiave `def`.
+ - Generatore: Un oggetto che genera un valore dinamicamente ed ad ogni iterazione.
+ - IDE (Ambiente di Sviluppo Integrato): Un'applicazione software per scrivere, testare e correggere il codice.
+ - Indentazione: Spazi iniziali in una riga di codice usati per definire blocchi in Python.
+ - Libreria: Una raccolta di codice in uno o più moduli che fornisce funzionalità aggiuntive.
+ - Ciclo: Una struttura di controllo, come `for` o `while`, che ripete un blocco di codice.
+ - Modulo: Un file contenente codice Python (di solito `.py`) che può essere importato in altri programmi.
+ - Name: L'equivalente di una variabile, ovvero il nome che diamo ad un oggetto che lo rende accessibile nel Scope corrente.
+ - Oggetto: Un'istanza di una classe, che rappresenta una struttura dati con comportamenti associati.
+ - Operatore: Un simbolo utilizzato per eseguire operazioni, come `+` per l'addizione o `==` per la comparazione.
+ - Parametro: Una variabile definita nella firma di una funzione che accetta valori in ingresso.
+ - Ricorsione: Una tecnica in cui una funzione richiama se stessa per risolvere parti più piccole di un problema.
+ - Rifattorizzazione (Refactoring): migliorare il codice senza cambiarne il comportamento.
+ - Return: Un'istruzione in una funzione che restituisce un risultato al chiamante.
+ - Scope: Il perimetro all'interno di un programma in cui un nome è accessibile.
+ 
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4efc28fa-1c9f-4469-bcef-fbb2cead882b\" name=\"Changes\" comment=\"Esercizio_1\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;martibrrrrr&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;git@github.com:martibrrrrr/ai-bootcamp-2025.git&quot;,\r\n    &quot;accountId&quot;: &quot;36144cc5-9cf3-4beb-96b8-88779d14337f&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2rzAwCweR3StzOKFQNE6ukab1Qa\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.esercizio1.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.tests.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"patch-1\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/marti/OneDrive - Politecnico di Torino/Desktop/CORSO IA_EDGEMONI/esercitazioni\",\r\n    \"settings.editor.selected.configurable\": \"vcs.Git\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\marti\\OneDrive - Politecnico di Torino\\Desktop\\CORSO IA_EDGEMONI\\esercitazioni\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-495700d161d3-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.22562.220\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4efc28fa-1c9f-4469-bcef-fbb2cead882b\" name=\"Changes\" comment=\"\" />\r\n      <created>1737551765790</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1737551765790</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Esercizio1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1737711121689</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1737711121689</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Esercizio_1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1737723696924</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1737723696924</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Esercizio1\" />\r\n    <MESSAGE value=\"Esercizio_1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Esercizio_1\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9c34a029b0837f7614317b2546ba72814f534548)
+++ b/.idea/workspace.xml	(date 1738014725680)
@@ -4,7 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4efc28fa-1c9f-4469-bcef-fbb2cead882b" name="Changes" comment="Esercizio_1" />
+    <list default="true" id="4efc28fa-1c9f-4469-bcef-fbb2cead882b" name="Changes" comment="Esercizio_1">
+      <change afterPath="$PROJECT_DIR$/python/GLOSSARIO.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/python/giorno2_3/esercizi/classi/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/python/giorno2_3/esercizi/classi/main.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/python/giorno2_3/esercizi/classi/tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/python/giorno2_3/esercizi/classi/tests.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -42,12 +47,13 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Python.crash.executor": "Run",
     "Python.esercizio1.executor": "Run",
     "Python.main.executor": "Run",
     "Python.tests.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "patch-1",
+    "git-widget-placeholder": "Merging patch-1",
     "ignore.virus.scanning.warn.message": "true",
     "last_opened_file_path": "C:/Users/marti/OneDrive - Politecnico di Torino/Desktop/CORSO IA_EDGEMONI/esercitazioni",
     "settings.editor.selected.configurable": "vcs.Git"
